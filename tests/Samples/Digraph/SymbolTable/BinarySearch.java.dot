digraph BinarySearch {
"0x7fffbb79bcb8" [label=BS shape=diamond]
"0x7fffbb7a7278" [label="int Init(int, )" shape=box]
"0x7fffbb79e618" [label="int : sz"]
"0x7fffbb7a7278" -> "0x7fffbb79e618"
"0x7fffbb79e898" [label="int : aux01"]
"0x7fffbb7a7278" -> "0x7fffbb79e898"
"0x7fffbb79e7d8" [label="int : aux02"]
"0x7fffbb7a7278" -> "0x7fffbb79e7d8"
"0x7fffbb79e6b8" [label="int : j"]
"0x7fffbb7a7278" -> "0x7fffbb79e6b8"
"0x7fffbb79e758" [label="int : k"]
"0x7fffbb7a7278" -> "0x7fffbb79e758"
"0x7fffbb79bcb8" -> "0x7fffbb7a7278"
"0x7fffbb7a6e78" [label="int Print()" shape=box]
"0x7fffbb79e548" [label="int : j"]
"0x7fffbb7a6e78" -> "0x7fffbb79e548"
"0x7fffbb79bcb8" -> "0x7fffbb7a6e78"
"0x7fffbb7a6948" [label="boolean Compare(int, int, )" shape=box]
"0x7fffbb79e3c8" [label="int : num2"]
"0x7fffbb7a6948" -> "0x7fffbb79e3c8"
"0x7fffbb79e2f8" [label="int : num1"]
"0x7fffbb7a6948" -> "0x7fffbb79e2f8"
"0x7fffbb79e4c8" [label="int : aux02"]
"0x7fffbb7a6948" -> "0x7fffbb79e4c8"
"0x7fffbb79e448" [label="boolean : retval"]
"0x7fffbb7a6948" -> "0x7fffbb79e448"
"0x7fffbb79bcb8" -> "0x7fffbb7a6948"
"0x7fffbb7a63a8" [label="int Div(int, )" shape=box]
"0x7fffbb79e038" [label="int : num"]
"0x7fffbb7a63a8" -> "0x7fffbb79e038"
"0x7fffbb79e1d8" [label="int : aux03"]
"0x7fffbb7a63a8" -> "0x7fffbb79e1d8"
"0x7fffbb79e0b8" [label="int : count01"]
"0x7fffbb7a63a8" -> "0x7fffbb79e0b8"
"0x7fffbb79e158" [label="int : count02"]
"0x7fffbb7a63a8" -> "0x7fffbb79e158"
"0x7fffbb79bcb8" -> "0x7fffbb7a63a8"
"0x7fffbb7a2478" [label="int Start(int, )" shape=box]
"0x7fffbb7ad568" [label="int : sz"]
"0x7fffbb7a2478" -> "0x7fffbb7ad568"
"0x7fffbb7ad6a8" [label="int : aux02"]
"0x7fffbb7a2478" -> "0x7fffbb7ad6a8"
"0x7fffbb7ad608" [label="int : aux01"]
"0x7fffbb7a2478" -> "0x7fffbb7ad608"
"0x7fffbb79bcb8" -> "0x7fffbb7a2478"
"0x7fffbb79bb88" [label="boolean Search(int, )" shape=box]
"0x7fffbb7ad7d8" [label="int : num"]
"0x7fffbb79bb88" -> "0x7fffbb7ad7d8"
"0x7fffbb79df58" [label="int : nt"]
"0x7fffbb79bb88" -> "0x7fffbb79df58"
"0x7fffbb79dcd8" [label="int : right"]
"0x7fffbb79bb88" -> "0x7fffbb79dcd8"
"0x7fffbb79dc38" [label="boolean : bs01"]
"0x7fffbb79bb88" -> "0x7fffbb79dc38"
"0x7fffbb79ddd8" [label="boolean : var_cont"]
"0x7fffbb79bb88" -> "0x7fffbb79ddd8"
"0x7fffbb79de58" [label="int : medium"]
"0x7fffbb79bb88" -> "0x7fffbb79de58"
"0x7fffbb79dd58" [label="int : left"]
"0x7fffbb79bb88" -> "0x7fffbb79dd58"
"0x7fffbb79ded8" [label="int : aux01"]
"0x7fffbb79bb88" -> "0x7fffbb79ded8"
"0x7fffbb79bcb8" -> "0x7fffbb79bb88"
"0x7fffbb79e998" [label="int : size"]
"0x7fffbb79bcb8" -> "0x7fffbb79e998"
"0x7fffbb79e918" [label="int[] : number"]
"0x7fffbb79bcb8" -> "0x7fffbb79e918"
"0x7fffbb79db48" [label=BinarySearch shape=diamond]
"0x7fffbb7a2848" [label="void main(String[], )" shape=box]
"0x7fffbb7ad438" [label="String[] : a"]
"0x7fffbb7a2848" -> "0x7fffbb7ad438"
"0x7fffbb79db48" -> "0x7fffbb7a2848"
}
