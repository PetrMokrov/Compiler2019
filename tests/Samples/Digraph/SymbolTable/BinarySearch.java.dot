digraph BinarySearch {
"0x611000003268" [label=BS shape=diamond]
"0x61200000a568" [label="int Init(int, )" shape=box]
"0x60b000010f48" [label="int : sz"]
"0x61200000a568" -> "0x60b000010f48"
"0x60b000011208" [label="int : aux01"]
"0x61200000a568" -> "0x60b000011208"
"0x60b000011158" [label="int : aux02"]
"0x61200000a568" -> "0x60b000011158"
"0x60b000010ff8" [label="int : j"]
"0x61200000a568" -> "0x60b000010ff8"
"0x60b0000110a8" [label="int : k"]
"0x61200000a568" -> "0x60b0000110a8"
"0x611000003268" -> "0x61200000a568"
"0x61200000a3e8" [label="int Print()" shape=box]
"0x60b000010e98" [label="int : j"]
"0x61200000a3e8" -> "0x60b000010e98"
"0x611000003268" -> "0x61200000a3e8"
"0x61200000a268" [label="boolean Compare(int, int, )" shape=box]
"0x60b000010c88" [label="int : num2"]
"0x61200000a268" -> "0x60b000010c88"
"0x60b000010bd8" [label="int : num1"]
"0x61200000a268" -> "0x60b000010bd8"
"0x60b000010de8" [label="int : aux02"]
"0x61200000a268" -> "0x60b000010de8"
"0x60b000010d38" [label="boolean : retval"]
"0x61200000a268" -> "0x60b000010d38"
"0x611000003268" -> "0x61200000a268"
"0x61200000a0e8" [label="int Div(int, )" shape=box]
"0x60b000010918" [label="int : num"]
"0x61200000a0e8" -> "0x60b000010918"
"0x60b000010b28" [label="int : aux03"]
"0x61200000a0e8" -> "0x60b000010b28"
"0x60b0000109c8" [label="int : count01"]
"0x61200000a0e8" -> "0x60b0000109c8"
"0x60b000010a78" [label="int : count02"]
"0x61200000a0e8" -> "0x60b000010a78"
"0x611000003268" -> "0x61200000a0e8"
"0x612000009de8" [label="int Start(int, )" shape=box]
"0x60b000010188" [label="int : sz"]
"0x612000009de8" -> "0x60b000010188"
"0x60b0000102e8" [label="int : aux02"]
"0x612000009de8" -> "0x60b0000102e8"
"0x60b000010238" [label="int : aux01"]
"0x612000009de8" -> "0x60b000010238"
"0x611000003268" -> "0x612000009de8"
"0x612000009f68" [label="boolean Search(int, )" shape=box]
"0x60b000010398" [label="int : num"]
"0x612000009f68" -> "0x60b000010398"
"0x60b000010868" [label="int : nt"]
"0x612000009f68" -> "0x60b000010868"
"0x60b0000104f8" [label="int : right"]
"0x612000009f68" -> "0x60b0000104f8"
"0x60b000010448" [label="boolean : bs01"]
"0x612000009f68" -> "0x60b000010448"
"0x60b000010658" [label="boolean : var_cont"]
"0x612000009f68" -> "0x60b000010658"
"0x60b000010708" [label="int : medium"]
"0x612000009f68" -> "0x60b000010708"
"0x60b0000105a8" [label="int : left"]
"0x612000009f68" -> "0x60b0000105a8"
"0x60b0000107b8" [label="int : aux01"]
"0x612000009f68" -> "0x60b0000107b8"
"0x611000003268" -> "0x612000009f68"
"0x60b000011368" [label="int : size"]
"0x611000003268" -> "0x60b000011368"
"0x60b0000112b8" [label="int[] : number"]
"0x611000003268" -> "0x60b0000112b8"
"0x611000003128" [label=BinarySearch shape=diamond]
"0x612000009c68" [label="void main(String[], )" shape=box]
"0x60b0000100d8" [label="String[] : a"]
"0x612000009c68" -> "0x60b0000100d8"
"0x611000003128" -> "0x612000009c68"
}
